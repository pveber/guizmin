(* #use "topfind" *)
(* #camlp4o *)
(* #thread *)
(* #require "core_kernel" *)
(* #require "bistro.lwt" *)
(* #directory "_build/src/lib" *)
(* #load "guizmin.cma" *)

(* open Core_kernel.Std *)

(* let run = *)
(* (\*  let log_event, send_to_log_event = React.E.create () in*\) *)
(*   let db = Bistro_db.init "_guizmin" in *)
(*   let blog = Bistro_log.make (\* ~hook:send_to_log_event *\) ~db () in *)
(*   let backend = Bistro_engine.local_worker (\* ~np:6 ~mem:(6 * 1024) *\) blog in *)
(*   fun x -> *)
(*     let u = Bistro_workflow.u x in *)
(*     try *)
(*       Bistro_engine.run db blog backend x ; *)
(*       Bistro_db.path db u *)
(*     with *)
(*       e -> ( *)
(*         print_string (In_channel.read_all (Bistro_db.stderr_path db u)) ; *)
(*         raise e *)
(*       ) *)
